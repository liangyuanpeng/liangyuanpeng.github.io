<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sofastack on Hi,I`m lan</title><link>/tags/sofastack/</link><description>Recent content in sofastack on Hi,I`m lan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 Dec 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/sofastack/index.xml" rel="self" type="application/rss+xml"/><item><title>转|SOFARPC优雅关闭剖析</title><link>/post/sofastack/sofarpc-right-down/</link><pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-right-down/</guid><description>前言 众所周知，在微服务架构下面，当应用需要进行新功能升级发布，或者异常关闭重启的时候，我们会对应用的进程进行关闭，而在关闭之前，我们希望做一</description></item><item><title>转|SOFARPC泛化调用实现剖析</title><link>/post/sofastack/sofarpc-generic-invoke/</link><pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-generic-invoke/</guid><description>SOFA Scalable Open Financial Architecture是蚂蚁金服自主研发的金融级分布式中间件，包含了构建金融级云原生架构所需的各个组件，是在金融场景里锤炼出来的最</description></item><item><title>转|SOFARPC序列化比较</title><link>/post/sofastack/sofarpc-serializer/</link><pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-serializer/</guid><description>前言 在应用服务化架构中，RPC 框架是非常重要的基础组件。而在 RPC 框架当中，序列化（以及反序列化）又是必不可少的一环。 因为序列化的性能对整体框架</description></item><item><title>转|SOFARPC注解支持剖析</title><link>/post/sofastack/sofarpc-annotation/</link><pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-annotation/</guid><description>1、前言 在SOFABoot 环境下，SOFARPC 提供三种方式给开发人员发布和引用 RPC 服务： XML 方式（配置） Annotation 方式（注解） 编程 API 方式（动态 编程 API 方</description></item><item><title>转|SOFARPC跨语言支持剖析</title><link>/post/sofastack/sofarpc-mult-language/</link><pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-mult-language/</guid><description>前言 随着 TIOBE 10月份的编程语言排行 的发布，C++重回第三的位置，新兴的 Swift 和 Go 表现出强劲的上升趋势。 与此同时，虽然目前 Java 的领头位置尚未出现有力挑</description></item><item><title>转|SOFARPC路由实现剖析</title><link>/post/sofastack/sofarpc-route-impl/</link><pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-route-impl/</guid><description>前言 RPC 框架需要创造一种调用远程服务如同调用本地般的体验，因此在实现一个基于 RPC 框架的微服务架构的系统时，服务消费者（客户端）往往只需要知道服务</description></item><item><title>转|SOFARPC连接管理与心跳剖析</title><link>/post/sofastack/sofarpc-heartbeat-connect/</link><pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-heartbeat-connect/</guid><description>前言 在 RPC 调用过程中，我们经常会和多个服务端进行远程调用，如果在每次调用的时候，都进行 TCP连接，会对 RPC的性能有比较大的影响，因此，实际的</description></item><item><title>转|SOFARPC同步异步实现剖析</title><link>/post/sofastack/sofarpc-sync-async/</link><pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-sync-async/</guid><description>前言 这一篇，我们为大家带来了开发过程中，最常接触到的同步异步调用解析。本文会介绍下同步异步的使用场景，以及 SOFARPC 中的代码实现机制，为了方便大家理</description></item><item><title>转|SOFARPC线程模型剖析</title><link>/post/sofastack/sofarpc-modle/</link><pubDate>Sun, 09 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-modle/</guid><description>前言 上一篇，我们介绍了 SOFARPC 同步异步的实现，本文我们将会介绍 SOFARPC 中的线程模型。 本文会从同步异步，阻塞非阻塞开始讲起，进而探讨常见的线程模型设计，之</description></item><item><title>转|SOFARPC链路追踪剖析</title><link>/post/sofastack/sofarpc-trace/</link><pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-trace/</guid><description>一. 前言 微服务已经被广泛应用在工业界，微服务带来易于团队并行开发、独立部署、模块化管理等诸多优点。然而微服务将原单体拆分多个模块独立部署，各</description></item><item><title>转|SOFARPC框架之总体设计与扩展机制</title><link>/post/sofastack/sofarpc-design/</link><pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate><guid>/post/sofastack/sofarpc-design/</guid><description>前言 RPC 框架作为分布式技术的基石，在分布式和微服务环境下，扮演着非常重要的角色。 在蚂蚁金服的分布式技术体系下，我们大量的技术产品（非网关类产品</description></item></channel></rss>