<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pulsar on Hi,I`m lan</title>
    <link>https://liangyuanpeng.github.io/tags/pulsar/</link>
    <description>Recent content in pulsar on Hi,I`m lan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://liangyuanpeng.github.io/tags/pulsar/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pulsar源码系列</title>
      <link>https://liangyuanpeng.github.io/post/list-of-source-with-pulsar/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/list-of-source-with-pulsar/</guid>
      <description>说明 之前研究过一些 pulsar 源码，无奈时间问题都中断了，这里列出一些研究入口给希望研究 pulsar 源码的同学。 对于交流持非常欢迎态度！可以微信联系我也可以在下</description>
    </item>
    
    <item>
      <title>下一代pulsar元数据存储Oxia</title>
      <link>https://liangyuanpeng.github.io/post/oxia-is-next-pulsar-metadata/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/oxia-is-next-pulsar-metadata/</guid>
      <description>Oxia 是什么? 简单来说呢 oxia 是一个 streamnative 开源的基于 kubernetes 的可扩展的元数据存储和协调系统,设计的目标是为了成为Apache Pulsar 的关键组件,也就是元数据中心,取</description>
    </item>
    
    <item>
      <title>部署去ZK后的Apache Pulsar</title>
      <link>https://liangyuanpeng.github.io/post/deploy-pulsar/</link>
      <pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/deploy-pulsar/</guid>
      <description>前言 本文基本上是按照官方文档来实践的,非常简单. 首先要明确我们需要做的几件事情： 生成 token 并且配置 Pulsar broker 开启 Token 认证. 配置 Pulsar broker 开启自身需要用到的客户</description>
    </item>
    
    <item>
      <title>GO上手项目值得你拥有:Bookkeeper客户端</title>
      <link>https://liangyuanpeng.github.io/post/bk-client-go-readme/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/bk-client-go-readme/</guid>
      <description>什么是apache bookkeeper 一句话介绍&amp;mdash;&amp;gt;Apache BookKeeper 是企业级存储系统，旨在保证高持久性、一致性与低延迟。 目前广泛应用在Apac</description>
    </item>
    
    <item>
      <title>Rust上手项目值得你拥有:Bookkeeper客户端</title>
      <link>https://liangyuanpeng.github.io/post/bookkeeper-rs-readme/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/bookkeeper-rs-readme/</guid>
      <description>什么是apache bookkeeper 一句话介绍&amp;mdash;&amp;gt;Apache BookKeeper 是企业级存储系统，旨在保证高持久性、一致性与低延迟。 目前广泛应用在Apac</description>
    </item>
    
    <item>
      <title>部署去ZK后的Apache Pulsar</title>
      <link>https://liangyuanpeng.github.io/post/deploy-pulsar/</link>
      <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/deploy-pulsar/</guid>
      <description>前言 记录我的终端更新笔记 :( 当我们在说元数据中心的时候我们在说什么 Bookkeeper 和 Pulsar Broker 都有各自的元数据中心,并且都有自己的元数据中心接口,默认都是ZK. 要</description>
    </item>
    
    <item>
      <title>[长期更新]pulsar问题列表</title>
      <link>https://liangyuanpeng.github.io/post/question-list-of-pulsar/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/question-list-of-pulsar/</guid>
      <description>说明 本文主要收集 apache pulsar 遇到的一些常见问题,欢迎对本文进行投稿你认为好的场景或问题. 升级 pulsar 客户端 sdk 从 pulsar2.10/pulsar2.11 的 sdk 升级到 pulsar 3.0.0 时由于不是全部组件都升级到统</description>
    </item>
    
    <item>
      <title>AWESOME消息队列</title>
      <link>https://liangyuanpeng.github.io/post/awesome-messagequeue/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/awesome-messagequeue/</guid>
      <description>前言 消息队列是应用程序解耦通信的一个关键组件,本篇博文主要以列举开源消息队列为目的编写,并不展开具体内容讲解，没有开源的不在列举范围内。 mq</description>
    </item>
    
  </channel>
</rss>
