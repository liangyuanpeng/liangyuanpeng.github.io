<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Hi,I`m lan</title><link>/tags/docker/</link><description>Recent content in Docker on Hi,I`m lan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>离线运行swagger文档</title><link>/post/swagger-api-offline/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>/post/swagger-api-offline/</guid><description>前言 在社区群看到有人希望能够将kubesphere的文档自己搭一个环境跑起来使用,我想了下这个需求应该是实际使用确实会碰到的,比如某些公司内</description></item><item><title>部署Halo博客</title><link>/post/deploy-halo/</link><pubDate>Fri, 26 Feb 2021 00:00:00 +0000</pubDate><guid>/post/deploy-halo/</guid><description>前言 jar包部署 注意:jar包部署需要jdk11版本 Docker方式部署 docker方式部署很简单，一条命令即可。 docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo halohub/halo 其中</description></item><item><title>用helm chart将chripstack部署到kubernetes之上</title><link>/post/use-helm-deploy-chirpstack-kubernetes/</link><pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate><guid>/post/use-helm-deploy-chirpstack-kubernetes/</guid><description>chirpstack-helm-chart 开源lorawan server 项目chirpstack的helm chart english 如何贡献 如果你想对这个项目进行贡献可以点击fork按钮fork这个项目并且发起P</description></item><item><title>用docker-compose快速部署ChirpStack</title><link>/post/docker-compose-deploy-chirpstack/</link><pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate><guid>/post/docker-compose-deploy-chirpstack/</guid><description>前提 本文使用docker-compose来部署ChirpStack，请确保已经含有以下环境： Git(非必须，可以先下载源码) Docker Docker-compose 关于Lora</description></item><item><title>不用安装docker也能构建docker镜像</title><link>/post/jib-springboot-docker-maven/</link><pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate><guid>/post/jib-springboot-docker-maven/</guid><description>前提 docker 容器镜像仓库 这里举例可以公用的两个 dockerhub 阿里云容器镜像服务 前言 本文主要介绍的是google开源的一个java领域的docker构建工具ji</description></item><item><title>Elasticsearch+Fluentd+Kafka搭建分布式日志系统</title><link>/post/elasticsearch-fluentd-kafka/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>/post/elasticsearch-fluentd-kafka/</guid><description>前言 由于logstash内存占用较大,灵活性相对没那么好,ELK正在被EFK逐步替代.其中本文所讲的EFK是Elasticsearch+Fl</description></item><item><title>使用logstash作为docker日志驱动收集日志</title><link>/post/logstash-logdriver-docker/</link><pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate><guid>/post/logstash-logdriver-docker/</guid><description>前言 logstash是一个开源的日志统一处理数据收集器,属于ELK中的L,在日志收集领域应用广泛. docker默认的日志驱动是json-fi</description></item><item><title>使用fluentd作为docker日志驱动收集日志</title><link>/post/fluentd-logdrive-docker/</link><pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate><guid>/post/fluentd-logdrive-docker/</guid><description>前言 docker默认的日志驱动是json-file,每一个容器都会在本地生成一个/var/lib/docker/containers/con</description></item><item><title>制作带有kafka插件和es插件的fluentd镜像</title><link>/post/fluentd-plugin-kafka/</link><pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate><guid>/post/fluentd-plugin-kafka/</guid><description>前言 Fluentd是用于统一日志记录层的开源数据收集器,是继Kubernetes、Prometheus、Envoy 、CoreDNS 和cont</description></item><item><title>fluentd语法入门</title><link>/post/fluentd-quickstart/</link><pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate><guid>/post/fluentd-quickstart/</guid><description>前言 Fluentd是用于统一日志记录层的开源数据收集器,是继Kubernetes、Prometheus、Envoy 、CoreDNS 和cont</description></item><item><title>docker常用命令集合</title><link>/post/deploy-command/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>/post/deploy-command/</guid><description>停止一台机器上的所有容器 docker stop `docker ps -qa` 根据特定关键字删除镜像 docker rmi `docker images | grep NAME` 本文有新内容时将持续更新</description></item><item><title>部署docker swarm集群监控</title><link>/post/deploy-docker-swarm-monitoring/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>/post/deploy-docker-swarm-monitoring/</guid><description>前提 Docker 前言 现在Docker Swarm已经彻底输给了K8S,但是现在K8S依然很复杂，上手难度较Docker Swarm高，如果是小规模团队且需</description></item><item><title>云原生编程语言ballerina:hello-world</title><link>/post/ballerina-hello-world/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>/post/ballerina-hello-world/</guid><description>前言 Ballerina是一款完全开源的编译时强类型语言,愿景是让云原生时代的程序员轻松编写出想要的的软件. 开源地址:https://gith</description></item></channel></rss>