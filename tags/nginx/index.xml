<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nginx on Hi,I`m lan</title><link>/tags/nginx/</link><description>Recent content in nginx on Hi,I`m lan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/nginx/index.xml" rel="self" type="application/rss+xml"/><item><title>常用网关都是如何配置缓存请求的</title><link>/post/how-to-config-for-cache-from-gateway/</link><pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate><guid>/post/how-to-config-for-cache-from-gateway/</guid><description>前言 Envoy apisix Pipy docker pull flomesh/pipy:0.90.0-54 pipy的体验 上手门槛比较高，官方文档相对也是比较少的，有一种束手无策的感觉. 例如,官方例子中是的 js 脚本是这样的: pipy() .listen(8000) .demuxHTTP().to( $=&amp;gt;$.muxHTTP().to( $=&amp;gt;$.connect(&amp;#39;localhost:8080&amp;#39;)</description></item><item><title>Jenkins远程部署Linux服务器</title><link>/post/remote-deploy-of-jenkins-for-linux-application/</link><pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate><guid>/post/remote-deploy-of-jenkins-for-linux-application/</guid><description>前言 之前在 Jenkins 上也有一些使用经验了，但是都是使用团队配置好的 Jenkins，自己只需要管自己的项目以及执行构建即可，这一次自己尝试了一下配置 Jenkins</description></item><item><title>部署React应用</title><link>/post/deploy-react-app/</link><pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate><guid>/post/deploy-react-app/</guid><description>前言 前后端分离已经是大趋势，服务器端只需要关注自己的接口逻辑实现，而不需要关注前端的页面跳转，这一部分交由前端处理。常见的就是React应用</description></item></channel></rss>