<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Hi,I`m lan</title>
    <link>https://liangyuanpeng.github.io/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Hi,I`m lan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://liangyuanpeng.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>lank8s.cn服务</title>
      <link>https://liangyuanpeng.github.io/post/service-lank8s.cn/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/service-lank8s.cn/</guid>
      <description>Hi there 👋 国内安装K8S基本镜像站&amp;mdash;&amp;gt; lank8s.cn lank8s.cn 服务是什么 lank8s.cn的使命是希望国内能够更低门槛的学习 Kubernetes 技术! 在微软的镜像代</description>
    </item>
    
    <item>
      <title>用kind搭建k8s集群环境</title>
      <link>https://liangyuanpeng.github.io/post/run-k8s-with-kind/</link>
      <pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/run-k8s-with-kind/</guid>
      <description>前言 由于各类基于 kubernetes 的云原生实验或测试的前提都是需要一个 kubernetes 环境,而在写博客时总是需要提及使用 Kind 来搭建 kubernetes 环境. 因此这里单独写一篇文章来介绍如何用</description>
    </item>
    
    <item>
      <title>argoworkflow 云原生工作流引擎</title>
      <link>https://liangyuanpeng.github.io/post/cloudnative-ci-of-argo-workflow/</link>
      <pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/cloudnative-ci-of-argo-workflow/</guid>
      <description>注：本文已投稿至云原生社区，因此作者填写为云原生社区 Argo workflow 是什么 老牌的工作流工具 Jenkins 应该是大部分人都接触过的，而在云原生时代，诞生了两大工作流工</description>
    </item>
    
    <item>
      <title>[长期更新]kubernetes问题列表记录</title>
      <link>https://liangyuanpeng.github.io/post/question-list-of-kubernetes/</link>
      <pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/question-list-of-kubernetes/</guid>
      <description>说明 本文主要收集常见场景下 kubernetes 遇到的一些常见问题,欢迎对本文进行投稿你认为好的场景或问题. 如何保证 sidecar 先于 app 容器销毁 通过信号方式 TODO 完善展开</description>
    </item>
    
    <item>
      <title>下一代pulsar元数据存储Oxia</title>
      <link>https://liangyuanpeng.github.io/post/oxia-is-next-pulsar-metadata/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/oxia-is-next-pulsar-metadata/</guid>
      <description>Oxia 是什么? 简单来说呢 oxia 是一个 streamnative 开源的基于 kubernetes 的可扩展的元数据存储和协调系统,设计的目标是为了成为Apache Pulsar 的关键组件,也就是元数据中心,取</description>
    </item>
    
    <item>
      <title>[长期更新]kubeadm常见问题以及配置记录</title>
      <link>https://liangyuanpeng.github.io/post/kubeadm-config-note-long-term/</link>
      <pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/kubeadm-config-note-long-term/</guid>
      <description>说明 本文主要收集常见场景下 kubeadm 配置以及遇到的一些常见问题,欢迎对本文进行投稿你认为好的场景配置或问题. 官方文档 https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta3/ 注意: 如果是其他版本则将 v1beta3 修改</description>
    </item>
    
    <item>
      <title>kubecon china 2023将在上海举办</title>
      <link>https://liangyuanpeng.github.io/post/kubecon-china-2023%E5%B0%86%E5%9C%A8%E4%B8%8A%E6%B5%B7%E4%B8%BE%E5%8A%9E/</link>
      <pubDate>Sat, 22 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/kubecon-china-2023%E5%B0%86%E5%9C%A8%E4%B8%8A%E6%B5%B7%E4%B8%BE%E5%8A%9E/</guid>
      <description>在 欧洲 kubecon2023 的会场上宣布了 kubecon 2023 上海的举办日期,非常值得期待! 同时在 Linux 基金会 Events 中也可以找到对应的公告: 说两句 虽然从2019年/2020年以来一直都</description>
    </item>
    
    <item>
      <title>将你的yaml文件迁移到helm</title>
      <link>https://liangyuanpeng.github.io/post/migrate-your-manifest-yaml-files-into-helm-chart/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/migrate-your-manifest-yaml-files-into-helm-chart/</guid>
      <description>在这篇博客文章中，我们将学习如何将现有的清单 yaml 文件转换为Helm Charts。 清单文件 Kubernetes 清单文件是描述 K8s 对象期望状态的YAML文件，例如 po</description>
    </item>
    
    <item>
      <title>从零到 Kubernetes 子项目负责人</title>
      <link>https://liangyuanpeng.github.io/post/from-zero-to-kubernets-subproject-lead/</link>
      <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/from-zero-to-kubernets-subproject-lead/</guid>
      <description>作者 Ala Dewberry (VMware) 译者 梁远鹏 与 chatGPT 加入任何开源社区都可能让人望而生畏，尤其是像 Kubernetes 这样的大型社区。我写这篇文章是为了分享我的经验，并鼓励其他人加入其中。</description>
    </item>
    
    <item>
      <title>基于k8up备份PVC到S3存储</title>
      <link>https://liangyuanpeng.github.io/post/backup-pvc-to-s3-with-k8up/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/backup-pvc-to-s3-with-k8up/</guid>
      <description>前言 k8up 目前是 CNCF sanbox 项目,基于 restic 来做数据备份到 S3 以及将数据从 S3 恢复到 PVC 中. 可以一次性备份也可以定时备份,普通备份是通过一个 job 挂载 PVC 来备份数据,也</description>
    </item>
    
    <item>
      <title>Kubernetes HPA:定制指标实现有效的CPU和内存扩展</title>
      <link>https://liangyuanpeng.github.io/post/kubernetes-hpa-custom-metrics-for-effective-cpu-memory-scaling/</link>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/kubernetes-hpa-custom-metrics-for-effective-cpu-memory-scaling/</guid>
      <description>作者 caiolombello 译者 梁远鹏 介绍和概述： Kubernetes 已成为容器编排的事实标准，为管理大规模容器化应用程序提供了强大的平台。 Kubernetes 的一个基本功能是其自动缩放功能，它允许</description>
    </item>
    
    <item>
      <title>keda-helmchart发布v2.10.1</title>
      <link>https://liangyuanpeng.github.io/post/keda-helmchart-release-with-v2.10.1/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/keda-helmchart-release-with-v2.10.1/</guid>
      <description>keda helm chart 发布v2.10.1 长话短说 helm repo add kedacore https://kedacore.github.io/charts helm repo update helm install keda kedacore/keda --version 2.10.1 -n keda --create-namespace 新内容 提供了对podLabels在 webhook Deployment 中的配置 (#404 🎉 贡献者 @pari-) 为cert-ma</description>
    </item>
    
    <item>
      <title>flomesh-ingress浅试</title>
      <link>https://liangyuanpeng.github.io/post/flomesh-ingress-quickstart/</link>
      <pubDate>Fri, 03 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/flomesh-ingress-quickstart/</guid>
      <description>前提 在开始之前,你需要以下前提准备. 对于本文来说使用的 K8S 环境是基于 Kind 来搭建的,因此将 Kind 命令写在前提内,但是如果你使用了其他工具搭建 K8S 或已经有</description>
    </item>
    
    <item>
      <title>Contour-1.24.0发布</title>
      <link>https://liangyuanpeng.github.io/post/contour-1.24.0-release/</link>
      <pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/contour-1.24.0-release/</guid>
      <description>前言 我们很高兴推出 Contour 的 v1.24.0 版本,这是我们针对 kubernetes 集群的第7层 HTTP 反向代理. 主要更新 修复了重复 HTTPProxy include condition的处理 重复的 include condition 现在能够被正确识</description>
    </item>
    
    <item>
      <title>国内环境拉取gcr和k8s镜像</title>
      <link>https://liangyuanpeng.github.io/post/pull-gcr-k8s-image-with-lank8s/</link>
      <pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/pull-gcr-k8s-image-with-lank8s/</guid>
      <description>前言 本文接下来所有配置都是基于 lank8s服务来做的. 在习惯了 kind 创建 kubernetes 集群后再次尝试了另外的搭建 kubernetes 集群工具: Talos 和 K0s,深深的感受到 Kind 将常用</description>
    </item>
    
    <item>
      <title>编译kubernetes组件</title>
      <link>https://liangyuanpeng.github.io/post/compile-kubernetes/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/compile-kubernetes/</guid>
      <description>kubernetes 发展到了今天(2023-02-19),编译 kubernetes 已经是一件很简单的事情,唯一的门槛就是需要有适合的内存资源以及编译需要用到的 registry.k8s.io 中的镜像. 编译 解</description>
    </item>
    
    <item>
      <title>[长期更新]k8s组件常用参数</title>
      <link>https://liangyuanpeng.github.io/post/k8s-component-config-note-long-term/</link>
      <pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/k8s-component-config-note-long-term/</guid>
      <description>说明 本文主要收集常见场景下 K8S 组件的配置以及遇到的一些常见问题,欢迎对本文进行投稿你认为好的场景配置或问题. 官方文档 https://kubernetes.io/docs/reference/config-api/</description>
    </item>
    
    <item>
      <title>k8s.gcr.io注册表完全冻结</title>
      <link>https://liangyuanpeng.github.io/post/frozen-for-k8s-gcr-io/</link>
      <pubDate>Sat, 11 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/frozen-for-k8s-gcr-io/</guid>
      <description>前言 k8s.gcr.io 这个注册表将会在 2023年4月3日完全冻结,新的注册表地址为 registry.k8s.io,在2022年11月28日官方就已经发布了一</description>
    </item>
    
    <item>
      <title>为containerd配置仓库镜像</title>
      <link>https://liangyuanpeng.github.io/post/registry-mirrors-for-containerd/</link>
      <pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/registry-mirrors-for-containerd/</guid>
      <description>前言 containerd 的仓库镜像功能是很有用的功能,特别是国内无法访问 gcr.io 和 k8s.gcr.io 以及 registry.k8s.io 这些镜像仓库的情况下. K3S 和 Kind 都提供了比较简单的方式来为内置的 containerd 配置仓库镜像</description>
    </item>
    
    <item>
      <title>K8S内置准入校验CRD参数配合lua起飞</title>
      <link>https://liangyuanpeng.github.io/post/k8s-validating-admission-policy-with-crdparam-lua/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/k8s-validating-admission-policy-with-crdparam-lua/</guid>
      <description>前言 k8s 1.26 推出了内置的准入校验机制,只需要使用 CEL 表达式就可以完成基本的准入校验逻辑,而高级功能包含将参数动态化,可以使用 CRD 资源的某个字段作为参</description>
    </item>
    
    <item>
      <title>用cel表达式来实现k8s准入校验</title>
      <link>https://liangyuanpeng.github.io/post/k8s-admissionregistration-with-cel/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/k8s-admissionregistration-with-cel/</guid>
      <description>前言 在 K8S 1.26 版本以前,达到 K8S 准入校验策略效果的方式有两种： 自己实现 K8S webook 直接使用 CNCF 项目中以 K8S 策略展开的项目,例如OPA、kyverno. 这些都是</description>
    </item>
    
    <item>
      <title>部署一个webhook,轻松解决gcr.io</title>
      <link>https://liangyuanpeng.github.io/post/resolve-gcr.io-with-webhook-of-repalcer/</link>
      <pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/resolve-gcr.io-with-webhook-of-repalcer/</guid>
      <description>前言 lank8s.cn 已经正常运营几年了，目前可以看到每天都有人在使用 gcr.lank8s.cn 来拉取 gcr.io 的镜像,避免了墙带来的困扰,不过当需要拉取的不同的镜像多了之后可能会显得有些</description>
    </item>
    
    <item>
      <title>cncf基金会中的rust项目</title>
      <link>https://liangyuanpeng.github.io/post/rust-project-in-cncf/</link>
      <pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/rust-project-in-cncf/</guid>
      <description>介绍 本文会介绍在CNCF中的Rust项目,项目的介绍可能是很简陋的,如果你可以帮忙完善一下项目的介绍,那就太好了,随时欢迎在评论区或网站仓库</description>
    </item>
    
    <item>
      <title>将热更新configmap作为Envoy的XDS服务</title>
      <link>https://liangyuanpeng.github.io/post/envoy-file-xds-with-reload-configmap/</link>
      <pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/envoy-file-xds-with-reload-configmap/</guid>
      <description>前言 由于实验基于kubernetes,因此你首先需要有一个kubernetes环境,这里推荐使用 Kind 命令来搭建.见用kind搭建k8s集群环境</description>
    </item>
    
    <item>
      <title>k8s部署云原生CD引擎Argo</title>
      <link>https://liangyuanpeng.github.io/post/k8s-cd-argo-deploy/</link>
      <pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/k8s-cd-argo-deploy/</guid>
      <description>部署Argo CD 安装Argo CD kubectl create namespace argocd kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml 如果下载访问有问题可以改一下地址,是我个人学习使用的一个代理github文件的下载地址.将r</description>
    </item>
    
    <item>
      <title>kubernetes常见问题</title>
      <link>https://liangyuanpeng.github.io/post/kubernetes-qa/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/kubernetes-qa/</guid>
      <description>声明 本文会持续的更新,将在使用kubernetes过程中遇到的问题都收集起来.欢迎投稿加入你遇到的问题 :) 跨版本升级 service-account-issuer is a required flag, &amp;ndash;service-account-signing-key-file and &amp;ndash;service-account-issuer are required flags 版本</description>
    </item>
    
    <item>
      <title>反向代理kube-apiserver的请求</title>
      <link>https://liangyuanpeng.github.io/post/proxy-kube-apiserver/</link>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/proxy-kube-apiserver/</guid>
      <description>本文会介绍在L7中转发下面两种方式的请求以及L4转发. 默认的使用证书的kubectl请求 使用token的kubectl请求 L4比较简单处理,</description>
    </item>
    
    <item>
      <title>Contour-v1.18.3发布</title>
      <link>https://liangyuanpeng.github.io/post/contour-v1.18.3-release/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/contour-v1.18.3-release/</guid>
      <description>前言 我们很高兴发布发布我们用于kubernetes集群七层反响代理Contour的1.18.3版本. Contour是什么 Contour是基于</description>
    </item>
    
    <item>
      <title>Contour-v1.20.0-beta.1发布</title>
      <link>https://liangyuanpeng.github.io/post/contour-v1.20.0-beta.1-release/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/contour-v1.20.0-beta.1-release/</guid>
      <description>前言 我们很高兴发布发布我们用于kubernetes集群七层反响代理Contour的v1.20.0版本. Contour是什么 Contour是基</description>
    </item>
    
    <item>
      <title>helm部署chaosmesh</title>
      <link>https://liangyuanpeng.github.io/post/deploy-chaosmesh-with-helm/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/deploy-chaosmesh-with-helm/</guid>
      <description>helm repo add chaos-mesh https://charts.chaos-mesh.org helm install chaos-mesh chaos-mesh/chaos-mesh -n=chaos-testing --version 2.0.4 lan@lan:~$ k get po -n chaos-testing NAME READY STATUS RESTARTS AGE chaos-controller-manager-5f7c8c4569-prc5s 0/1 ContainerCreating 0 40s chaos-daemon-bz859 0/1 ContainerCreating 0 40s chaos-dashboard-5f7b6b9b6b-ml22l 0/1 ContainerCreating 0 40s 最后的最后 本文其实就是按照官方文档操作了一边,就让chaosme</description>
    </item>
    
    <item>
      <title>k8s-webhook开发技巧</title>
      <link>https://liangyuanpeng.github.io/post/dev-webhook-for-kubernetes/</link>
      <pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/dev-webhook-for-kubernetes/</guid>
      <description>什么是kubernetes webhook 痛点 网上很多文章都是说写了kubernetes webhook代码后编译丢到k8s里面去测试,但是这样就非常消耗时</description>
    </item>
    
    <item>
      <title>部署在线的lank8s webhook之后,不再为k8s.gcr.io/gcr.io镜像苦恼</title>
      <link>https://liangyuanpeng.github.io/post/deploy-lank8s-webhook-for-k8s.gcr.io/</link>
      <pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/deploy-lank8s-webhook-for-k8s.gcr.io/</guid>
      <description>什么是lank8s webhook 前提: 使用这项在线服务需要保证kubernetes所在的机器是联网状态. lank8s webhook是一项在线的webook服务,唯</description>
    </item>
    
    <item>
      <title>部署metrics-server,把kubectl top用起来</title>
      <link>https://liangyuanpeng.github.io/post/deploy-metrics-server-for-kubectl-top/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/deploy-metrics-server-for-kubectl-top/</guid>
      <description>在部署metrics-server之前使用kubectl top 部署metrics-server yaml部署 yaml文件如下: apiVersion: v1 kind: ServiceAccount metadata: labels: k8s-app: metrics-server name: metrics-server</description>
    </item>
    
    <item>
      <title>Contour-v1.9.0发布</title>
      <link>https://liangyuanpeng.github.io/post/contour-v1.9.0-release/</link>
      <pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/contour-v1.9.0-release/</guid>
      <description>前言 Contour继续添加新功能以帮助你更好的管理集群入口,在我们最新的版本Contour1.9.0中包含了支持外部认证服务(extauth</description>
    </item>
    
    <item>
      <title>Contour-v1.19.1发布</title>
      <link>https://liangyuanpeng.github.io/post/contour-v1.19.1-release/</link>
      <pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/contour-v1.19.1-release/</guid>
      <description>前言 我们很高兴发布发布我们用于kubernetes集群七层反响代理Contour的1.19.1版本. Contour是什么 Contour是基于</description>
    </item>
    
    <item>
      <title>使用kubekey快速部署kubernetes</title>
      <link>https://liangyuanpeng.github.io/post/deploy-kubernetes-with-kubekey/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/deploy-kubernetes-with-kubekey/</guid>
      <description>前言 Kubekey 是青云研发并开源的一款快速部署 kubernetes 的工具,并且它也是下一代安装kubesphere的工具,使用 kubekey 你可以很轻松的就部署一套 kubernetes/kubespher 环境,我的体验</description>
    </item>
    
    <item>
      <title>CDF(持续交付基金会)欢迎基于k8s构建容器镜像的框架Shipwright作为新的孵化项目</title>
      <link>https://liangyuanpeng.github.io/post/cdf-new-project-shipwright/</link>
      <pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/cdf-new-project-shipwright/</guid>
      <description>说明: 本文将使用CDF作为持续交付基金会简称. 基于 Tekton 构建容器镜像的简单方法 旧金山,2021年8月3日&amp;mdash;CDF是一个开源软件基金会</description>
    </item>
    
    <item>
      <title>[长期更新]etcd问题列表</title>
      <link>https://liangyuanpeng.github.io/post/question-list-of-etcd/</link>
      <pubDate>Sat, 22 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/question-list-of-etcd/</guid>
      <description>说明 本文主要收集 etcd 遇到的一些常见问题,欢迎对本文进行投稿你认为好的场景或问题.</description>
    </item>
    
    <item>
      <title>[长期更新]helm常见问题以及配置记录</title>
      <link>https://liangyuanpeng.github.io/post/helm-config-note-long-term/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/helm-config-note-long-term/</guid>
      <description>说明 本文主要收集常见场景下 helm 配置以及遇到的一些常见问题,欢迎对本文进行投稿你认为好的场景配置或问题. 官方文档 https://helm.sh/docs/</description>
    </item>
    
    <item>
      <title>Kubernetes多租户–最佳实践指南</title>
      <link>https://liangyuanpeng.github.io/post/k8s-multi-tenancy-guide/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/k8s-multi-tenancy-guide/</guid>
      <description>前言 随着Kubernetes的使用范围不断扩大，Kubernetes多租户成为越来越多的组织感兴趣的话题。但是，由于Kubernetes本身</description>
    </item>
    
    <item>
      <title>kubernetes部署longhorn</title>
      <link>https://liangyuanpeng.github.io/post/k8s-deploy-longhorn/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/k8s-deploy-longhorn/</guid>
      <description>前言 longhorn是rancher公司开源并贡献给CNCF的一个开源分布式存储项目,可用来作为kubernetes的CSI存储. 本文介绍h</description>
    </item>
    
    <item>
      <title>kubernetes部署kube-prometheus</title>
      <link>https://liangyuanpeng.github.io/post/kubernetes-deploy-kube-prometheus/</link>
      <pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/kubernetes-deploy-kube-prometheus/</guid>
      <description>如何部署kube-prometheus 本文使用https://github.com/prometheus-operator/kube-pro</description>
    </item>
    
    <item>
      <title>kubeadm配合短域名lank8s.cn部署kubernetes</title>
      <link>https://liangyuanpeng.github.io/post/kubeadm-deploy-kubernetes-lank8scn/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/kubeadm-deploy-kubernetes-lank8scn/</guid>
      <description>本文实现目标 本文主要使用kubeadm快速部署一个单机的kubernetes,其中镜像仓库使用lank8s.cn,当然也可以使用其他地址,l</description>
    </item>
    
    <item>
      <title>OpenKruise专栏介绍</title>
      <link>https://liangyuanpeng.github.io/post/openkruise-column/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/openkruise-column/</guid>
      <description>OpenKruise 是什么 OpenKruise 是 Kubernetes 的一个标准扩展，它可以配合原生 Kubernetes 使用，并为管理应用容器、sidecar、镜像分发等方面提供更加强大和高效的能力. 最初由阿里巴巴</description>
    </item>
    
    <item>
      <title>用helm chart将chripstack部署到kubernetes之上</title>
      <link>https://liangyuanpeng.github.io/post/use-helm-deploy-chirpstack-kubernetes/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/use-helm-deploy-chirpstack-kubernetes/</guid>
      <description>chirpstack-helm-chart 开源lorawan server 项目chirpstack的helm chart english 如何贡献 如果你想对这个项目进行贡献可以点击fork按钮fork这个项目并且发起P</description>
    </item>
    
    <item>
      <title>k8s-client-go源码剖析(二)</title>
      <link>https://liangyuanpeng.github.io/post/k8s-client-go-source-2/</link>
      <pubDate>Sat, 23 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/k8s-client-go-source-2/</guid>
      <description>简介：云原生社区活动&amp;mdash;Kubernetes 源码剖析第一期第二周 本周是 K8S 源码研习社第一期第二周，学习内容是学习Informer机制</description>
    </item>
    
  </channel>
</rss>
