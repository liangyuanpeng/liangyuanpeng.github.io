<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes-sigs on Hi,I`m lan</title>
    <link>https://liangyuanpeng.github.io/tags/kubernetes-sigs/</link>
    <description>Recent content in kubernetes-sigs on Hi,I`m lan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://liangyuanpeng.github.io/tags/kubernetes-sigs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>构建kind-node镜像的更多选择</title>
      <link>https://liangyuanpeng.github.io/post/more-ways-to-build-kind-node/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/more-ways-to-build-kind-node/</guid>
      <description>简介 在 PR 合并之前, Kind 构建一个自定义的 kubernetes 节点镜像至少有两个步骤(Kind命令自动完成): 使用 kubernetes 源码构建二进制文件 (假设已经下载好 kubernetes 源码) Kind 开始</description>
    </item>
    
    <item>
      <title>使用crio作为kind的容器运行时</title>
      <link>https://liangyuanpeng.github.io/post/use-cri-o-container-runtime-with-kind/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/use-cri-o-container-runtime-with-kind/</guid>
      <description>译者: 梁远鹏 在本文中,我将演示如何基于特定的 kubernetes 版本和 cri-o 运行时构建kind的node镜像 构建基础镜像 为了构建基础镜像,我们需要 kind 的源码: $ git clone</description>
    </item>
    
    <item>
      <title>将Etcd作为一个kubernetes sig来运作</title>
      <link>https://liangyuanpeng.github.io/post/etcd-as-a-kubernetes-sig/</link>
      <pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://liangyuanpeng.github.io/post/etcd-as-a-kubernetes-sig/</guid>
      <description>说明 在我看来,做出这个决定的本质原因是 Etcd 的贡献者/维护人员过少,因此希望将 Etcd 作为一个 kubernetes sig 来运作,以此来降低维护人员的维护程度以及通过 kubernetes sig 来吸</description>
    </item>
    
  </channel>
</rss>
